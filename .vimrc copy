execute pathogen#infect()
syntax on
filetype plugin indent on

let g:markdown_syntax_conceal = 0

set nowrap

cmap w!! %!sudo tee > /dev/null

set tabstop=2
set shiftwidth=2

let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git\|__tests__\|third-party'
let g:ctrlp_working_path_mode = 0

if executable('ag')
	" Use Ag over Grep
	set grepprg=ag\ --nogroup\ --nocolor
	"Use ag in CtrlP for listing files.
	let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
endif 

if has ('autocmd') " Remain compatible with earlier versions
	 augroup vimrc     " Source vim configuration upon save
		     autocmd! BufWritePost $MYVIMRC source % | echom "Reloaded " . $MYVIMRC | redraw
		         autocmd! BufWritePost $MYGVIMRC if has('gui_running') | so % | echom "Reloaded " . $MYGVIMRC | endif | redraw
			   augroup END
		   endif " has autocmd"

"let g:NERDTreeWinPos = "left"
set number
set noswapfile
colorscheme space-vim-dark

"autocmd VimEnter * execute 'NERDTree' | wincmd p

" pangloss/vim-javascript.git CONFIG
" enables syntax highlighiting for JSDOC | default: 0
let g:javascript_plugin_jsdoc = 1
" enables additional syntax highlighting for NGDoc | default: 0
let g:javascript_plugin_ngdoc = 0
" enables syntax highlighting for Flow | default : 0
let g:javascript_plugin_flow = 1

"Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_javascript_eslint_exe = 'npm run lint --'
let g:syntastic_typescript_checkers = ['tslint', 'tsc']

" mxw/vim.jsx CONFIG
" requires jsx syntax on ONLY jsx files | default: 1
let g:jsx_ext_required = 0
command -nargs=1 E execute('silent! !mkdir -p "$(dirname "<args>")"') <Bar> e <args>

" Remapping Pane direction to make it simpler
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>
set splitbelow
set splitright

" Vim Noob forceful remaps, making vim easier to learn
inoremap jk <esc>
inoremap <esc> <nop>
noremap <left> <nop>
noremap <right> <nop>
noremap <up> <nop>
noremap <down> <nop>

" Remapping Pane Resizing Options to make them simpler
nnoremap _ <C-W>_
nnoremap - <C-W>-
nnoremap + <C-W>+
nnoremap = <C-W>=

" [Not working yet] Remapping ScrollWheel to never work
noremap <ScrollWheelUp> <nop>
noremap <S-ScrollWheelUp> <nop>
noremap <C-ScrollWheelUp> <nop>
noremap <ScrollWheelDown> <nop>
noremap <S-ScrollWheelDown> <nop>
noremap <C-ScrollWheelDown> <nop>

" auto-pairs stuff
let g:AutoPairsFlyMode = 1
